#!/bin/bash
# User custom scripts

historyawk() { history|awk '{a[$2]++}END{for(i in a){printf"%5d\t%s\n",a[i],i}}'|sort -nr|head; }

# Update requirements.txt based on setup.py
# run inside the same directory of setup.py
update_requirements_txt() {
    package_name=$1
    virtualenv gen_req_venv
    source gen_req_venv/bin/activate
    pip install .
    pip freeze --local | grep -v "^$package_name==" > requirements.txt
   deactivate
   rm -rf gen_req_venv
}

# Enrico's scripts for statmonster
# Find statmonster hosts
find_statmonster() { mco find -C "role::statmonster" -F region=$1; }

# Find statmonster process
find_statmonster_process() {
    datacenter=$2
    stream=$3
    hosts=$( mco find -C "role::statmonster" -F region=$1 )
    echo "Hosts=$hosts"
    ssh-list $hosts -- "ps auxf | grep statmonster | grep -v grep | grep "statmonster.main-scribe.$datacenter.$stream" | sed -s \"s/yelpcorp.com |/yelpcorp.com|/\" | tr -s \" \" "
}

# Count statmonster process
count_statmonster_process() {
    hosts=$( mco find -C "role::statmonster" -F region=$1 )
    echo "Hosts=$hosts"
    ssh-list $hosts -- "ps auxf | grep statmonster | grep -v grep | grep "statmonster.main-scribe." | sed -s \"s/yelpcorp.com |/yelpcorp.com|/\" | tr -s \" \" | wc -l "
}

# Stop statmonster in a certain region
statmonster_stop() {
    read -p "hit return to confirm (control-C to abort): " lastchance
    mco rpc -C "role::statmonster" -F region=$1 service stop service=statmonster
}

# Start statmonster in a certain region
statmonster_start() {
    read -p "hit return to confirm (control-C to abort): " lastchance
    mco rpc -C "role::statmonster" -F region=$1 service start service=statmonster
}

# Statmonster status
statmonster_status() {
    mco rpc -C "role::statmonster" -F region=$1 service status service=statmonster
}

# Antonio's additions
# Add statmonster hosts ssh keys to make other command work
add_statmonster_hosts_ssh_keys() {
    datacenter=$2
    hosts=$( mco find -C "role::statmonster" -F region=$1 )
    echo "Hosts=$hosts"
    for host in $hosts; do ssh -o "StrictHostKeyChecking no" -t antonio@$host "exit"; done
}
