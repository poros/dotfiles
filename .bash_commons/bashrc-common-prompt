#!/bin/bash
#
# PS1 magic
#
# Mostly copied from YUVAL KOGMAN version, added my own __git_ps1 stuff
# Original: http://gist.github.com/621452
#
# See video demo of this at http://vimeo.com/15789794
#
# To enable save as .bash_prompt in $HOME and add to .bashrc:
#
# . ~/.bash_prompt
#
# Pedro Melo, <melo@simplicidade.org>

_update_prompt(){
    ## Save $? early, we'll need it later
    local exit="$?"

    ## define some colors
    local red="31";
    local green="32";
    local yellow="33";
    local blue="34";
    local purple="35";
    local cyan="36";
    local white="37";

    local pre="\[\e[";
    local suf="\]";

    local e_red="${pre}0;${red}m$suf";
    local e_green="${pre}0;${green}m$suf";
    local e_yellow="${pre}0;${yellow}m$suf";
    local e_blue="${pre}0;${blue}m$suf";
    local e_purple="${pre}0;${purple}m$suf";
    local e_cyan="${pre}0;${cyan}m$suf";
    local e_white="${pre}0;${white}m$suf";

    local e_bred="$pre$red;1m$suf";
    local e_bgreen="$pre$green;1m$suf";
    local e_byellow="$pre$yellow;1m$suf";
    local e_bblue="$pre$blue;1m$suf";
    local e_bpurple="$pre$purple;1m$suf";
    local e_bcyan="$pre$cyan;1m$suf";
    local e_bwhite="$pre$white;1m$suf";

    local e_normal="\[\e[0;0m\]"

    ## Initial prompt
    local host_directory="$e_bgreen\h$e_normal:$e_cyan\w$e_normal";

    ## Color based on exit code
    local bul="\342\200\242" # bullet character
    case "$exit" in
        "0" ) ex="$e_green:)$e_normal " ;;
        * ) ex="$e_bred:($e_normal " ;;
    esac

    ## Color current user
    local u;
    local p;
    if [ "$UID" = "0" ]; then
        u="$e_bred\u$e_normal";
        p="$e_bred#$e_normal";
    else
        u="$e_bblue\u$e_normal";
        p="\$";
    fi

    # Check to see if __git_ps1 exists
    declare -f __git_ps1 > /dev/null
    RETVAL=$?
    if [ $RETVAL -eq 0 ] ; then
        ## Color git status if any
        branch=`__git_ps1 " (%s)"`
        if [ -n "$branch" ] ; then
            local is_big_repo=`git config bash.big-repo`
            if [ -z "$is_big_repo" ] ; then
                ## Assumes that untracked files are always listed after modified ones
                ## True for all git versions I could find
                git status --porcelain | perl -ne 'exit(1) if /^ /; exit(2) if /^[?]/'
                case "$?" in
                    "0" ) branch="$e_green$branch$e_normal" ;;
                    "1" ) branch="$e_red$branch$e_normal" ;;
                    "2" ) branch="$e_yellow$branch$e_normal" ;;
                    "130") git config bash.big-repo 1 ;;
                esac
            fi
        fi
    else
        branch=" (sandbox)"
    fi
    if [ $VIRTUAL_ENV ]; then
        export PS1="(`basename \"$VIRTUAL_ENV\"`)[$u@$host_directory]$branch $ex$p ";
    else
        export PS1="[$u@$host_directory]$branch $ex$p ";
    fi
}

if [ -n "$PS1" ] ; then
    git_prompt="/etc/bash_completion.d/git-prompt"
    if [ -e  $git_prompt ]; then
        source $git_prompt
    fi
    # since we need the last exit value $? to set :) or :(, we want any other existing
    # prompt customization to happen after our function
    PROMPT_COMMAND="_update_prompt; $PROMPT_COMMAND"
    export PROMPT_COMMAND
fi

# helper commands to explicitly change the setting:
dumb_prompt () {
    git config bash.big-repo 1
}

smart_prompt () {
    git config --unset bash.big-repo
}
